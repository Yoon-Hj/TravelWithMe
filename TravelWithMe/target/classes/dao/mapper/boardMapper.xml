<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="dao.IBoardDao">

<!-- 내가 작성한 게시글 조회하기 -->

<select id="selectBoardById" parameterType="String" resultType="java.util.HashMap">
	select bnum,bkind,bwritedate,btitle from 
	(select * from board where mid = #{mid} and cdel = 0 order by bwritedate desc) 
     where rownum <![CDATA[ <= ]]> 5
</select>

<!-- 여행취향에 맞는 동행게시물 4개조회하기 -->

<select id="selectAccomListByLike" parameterType="String" resultType="accomBoard">
	select * 
	from (select b.bnum, b.btitle, b.breadcount, b.mid, a.aarea, a.astartdate, a.afinishdate
	         from board b, (select * from accompany
	                                where astartdate > sysdate
	                               <if test="value != null">and likecode = #{value}</if>) a
	         where b.bnum = a.bnum
	         and b.cdel = 0
	         order by b.breadcount desc) a
	where rownum <![CDATA[ <= ]]> 4
</select>

<!-- 조회순으로 가이드 게시물 조회하기 -->
<select id="selectGuideListByRcnt" resultType="guideBoard">
	select * 
    from (select b.bnum, b.btitle, b.breadcount, b.mid, g.garea ,g.gstartdate, g.gfinishdate, p.photopath
            from (select * from guide
                      where genddate <![CDATA[ >= ]]> sysdate  ) g, board b left join (select bnum, photopath
                                                                                     from photo
                                                                                     where porder = 0) p
            on b.bnum = p.bnum
            where b.bnum = g.bnum
            and b.cdel = 0
            order by b.breadcount desc)
     where rownum <![CDATA[ <= ]]> 4
</select>

<!-- 각 게시판의 전체 게시글 갯수 조회 -->
<sql id="bkind">
	<choose>
		<when test="bkind == 'A'">
			'A'
		</when>
		<when test="bkind == 'G'">
			'G'
		</when>
		<otherwise>
			'C'
		</otherwise>
	</choose>
</sql>
<select id="getBoardCount" parameterType="java.util.HashMap" resultType="int">
	select count(*) from board where bkind = <include refid="bkind"/> and cdel=0
</select>

<!-- 페이징 데이터로 동행게시물 조회하기 -->
<select id="selectAccomListByPage" parameterType="java.util.HashMap" resultType="accomBoard">
	select * from (select rownum as rn ,e.* from 
	(select b.bnum, b.btitle, b.bcontent, b.breadcount, b.mid, a.aarea, a.astartdate, a.afinishdate
         from board b, accompany a
         where b.bnum = a.bnum
         and b.cdel = 0
         order by b.bnum desc) e) 
	where rn between #{offset} and #{offset} + #{perpage} - 1
</select>

<!-- 페이징 데이터로 가이드게시글 조회하기 -->
<select id="selectGuideListByPage" parameterType="java.util.HashMap" resultType="guideBoard">
	select * from (select rownum as rn ,e.* from 
	(select b.bnum, b.btitle, b.breadcount, b.mid, g.garea ,g.gstartdate, g.gfinishdate, p.photopath
    from guide g, board b left join 
    (select bnum, photopath from photo where porder = 0) p
            on b.bnum = p.bnum
            where b.bnum = g.bnum
            and b.cdel = 0
            order by b.bnum desc) e) 
	where rn between #{offset} and #{offset} + #{perpage} - 1
</select>

<!-- 페이징 데이터로 커뮤니티게시글 조회하기 -->
<select id="selectCommListByPage" parameterType="java.util.HashMap" resultType="commuBoard">
	select * from (select rownum as rn ,e.* from 
	(select b.bwritedate, b.bnum, b.btitle, b.breadcount, b.mid, comm.commukind 
    from board b, community comm where b.bnum = comm.bnum and b.cdel=0 order by b.bnum desc) e) 
	where rn between #{offset} and #{offset} + #{perpage} - 1
</select>

<!-- 키워드 검색을 위해 필요한 sql문 -->
<sql id="andor">
	<choose>
		<when test="chk == 1">
			or
		</when>
		<otherwise>
			and
		</otherwise>
	</choose>
</sql>
<sql id="chk">
	<choose>
		<when test="chk == 1">
			1=0
		</when>
		<otherwise>
			1=1
		</otherwise>
	</choose>
</sql>

<!-- 키워드로 검색된 동행게시글 갯수 조회하기 -->
<select id="getAccomCountByKeyword" parameterType="java.util.HashMap" resultType="int">
	select count(*) from (select b.bnum, b.btitle, b.bcontent, b.breadcount, b.mid, a.likecode, a.aarea, a.astartdate, a.afinishdate
		 from board b, accompany a
		 where b.bnum = a.bnum
		 and b.cdel = 0
		 order by b.bnum desc)
	where <include refid="chk"/>
	<if test="type==1 or type==3"> <include refid="andor"/> btitle like '%${keyword}%' </if>
	<if test="type==2 or type==3"> <include refid="andor"/> bcontent like '%${keyword}%' </if>
	<if test="type==4"> <include refid="andor"/> mid like '%${keyword}%' </if>
	<if test="type==5"> <include refid="andor"/> aarea like '%${keyword}%' </if>
	<if test="startdate != null"> <include refid="andor"/> <![CDATA[ astartdate >= #{startdate} and afinishdate < TO_DATE(#{finishdate}, 'YY-MM-DD') + 1  ]]> </if>
	<if test="likecode != null"> <include refid="andor"/> likecode = #{likecode} </if>
</select>

<!-- 키워드로 동행게시글 조회하기 -->
<select id="selectAccomBoardByKeyword" parameterType="java.util.HashMap" resultType="accomBoard">
	select * from (select rownum as rn ,e.* from 
	(select * from (select b.bnum, b.btitle, b.bcontent, b.breadcount, b.mid, a.likecode, a.aarea, a.astartdate, a.afinishdate
		 from board b, accompany a
		 where b.bnum = a.bnum
		 and b.cdel = 0
		 order by b.bnum desc)
	where <include refid="chk"/>
	<if test="type==1 or type==3"> <include refid="andor"/> btitle like '%${keyword}%' </if>
	<if test="type==2 or type==3"> <include refid="andor"/> bcontent like '%${keyword}%' </if>
	<if test="type==4"> <include refid="andor"/> mid like '%${keyword}%' </if>
	<if test="type==5"> <include refid="andor"/> aarea like '%${keyword}%' </if>
	<if test="startdate != null"> <include refid="andor"/> <![CDATA[ astartdate >= #{startdate} and afinishdate < TO_DATE(#{finishdate}, 'YY-MM-DD') + 1 ]]> </if>
	<if test="likecode != null"> <include refid="andor"/> likecode = #{likecode} </if>) e) 
	where rn between #{offset} and #{offset} + #{perpage} - 1
</select>

<!-- 키워드로 검색된 가이드게시글 갯수 조회하기 -->
<select id="getGuideCountByKeyword" parameterType="java.util.HashMap" resultType="int">
	select count(*) from 
	(select b.bnum, b.btitle, b.bcontent, b.breadcount, b.mid, g.garea ,g.gstartdate, g.gfinishdate, g. gthema, p.photopath
	    from guide g, board b left join (select bnum, photopath from photo where porder = 1) p
	    on b.bnum = p.bnum
		where b.bnum = g.bnum
		and b.cdel = 0
		order by b.bnum desc)
	where <include refid="chk"/>
	<if test="type==1 or type==3"> <include refid="andor"/> btitle like '%${keyword}%' </if>
	<if test="type==2 or type==3"> <include refid="andor"/> bcontent like '%${keyword}%' </if>
	<if test="type==4"> <include refid="andor"/> mid like '%${keyword}%' </if>
	<if test="type==5"> <include refid="andor"/> garea like '%${keyword}%' </if>
	<if test="type==6"> <include refid="andor"/> gthema like '%${keyword}%' </if>
	<if test="startdate != null"> <include refid="andor"/> <![CDATA[ gstartdate >= #{startdate} and gfinishdate < TO_DATE(#{finishdate}, 'YY-MM-DD') + 1 ]]> </if>
</select>

<!-- 키워드로 가이드게시글 조회하기 -->
<select id="selectGuideBoardByKeyword" parameterType="java.util.HashMap" resultType="guideBoard">
	select * from (select rownum as rn ,e.* from 
	(select * from (select b.bnum, b.btitle, b.bcontent, b.breadcount, b.mid, g.garea ,g.gstartdate, g.gfinishdate, g. gthema, p.photopath
	    from guide g, board b left join (select bnum, photopath from photo where porder = 1) p
	    on b.bnum = p.bnum
		where b.bnum = g.bnum
		and b.cdel = 0
		order by b.bnum desc)
	where <include refid="chk"/>
	<if test="type==1 or type==3"> <include refid="andor"/> btitle like '%${keyword}%' </if>
	<if test="type==2 or type==3"> <include refid="andor"/> bcontent like '%${keyword}%' </if>
	<if test="type==4"> <include refid="andor"/> mid like '%${keyword}%' </if>
	<if test="type==5"> <include refid="andor"/> garea like '%${keyword}%' </if>
	<if test="type==6"> <include refid="andor"/> gthema like '%${keyword}%' </if>
	<if test="startdate != null"> <include refid="andor"/> <![CDATA[ gstartdate >= #{startdate} and gfinishdate < TO_DATE(#{finishdate}, 'YY-MM-DD') + 1 ]]> </if>) e) 
	where rn between #{offset} and #{offset} + #{perpage} - 1
</select>

<!-- 키워드로 검색된 커뮤니티게시글 갯수 조회하기 -->
<select id="getCommuCountByKeyword" parameterType="java.util.HashMap" resultType="int">
	select count(*) from 
	(select b.bwritedate, b.bnum, b.bcontent, b.btitle, b.breadcount, b.mid, comm.commukind 
	    from board b, community comm where b.bnum = comm.bnum and b.cdel=0 order by b.bnum desc)
	where 1=0
	<if test="type==1 or type==3"> or btitle like '%${keyword}%' </if>
	<if test="type==2 or type==3"> or bcontent like '%${keyword}%' </if>
	<if test="type==4"> or mid like '%${keyword}%' </if>
</select>

<!-- 키워드로 커뮤니티게시글 조회하기 -->
<select id="selectCommuBoardByKeyword" parameterType="java.util.HashMap" resultType="commuBoard">
	select * from (select rownum as rn ,e.* from 
	(select * from (select b.bwritedate, b.bnum, b.btitle, b.bcontent, b.breadcount, b.mid, comm.commukind 
	    from board b, community comm where b.bnum = comm.bnum and b.cdel=0 order by b.bnum desc)) e) 
	where rn between #{offset} and #{offset} + #{perpage} - 1
</select>

<!-- 메인에서 검색한 키워드로 전체 게시글 조회하기 -->
<select id="selectQuickSearch" parameterType="String" resultType="java.util.HashMap">
	select * from board	where (btitle like '%${value}%' or bcontent like '%${value}%')
	and cdel=0
</select>

<!-- 게시글 번호로 동행게시글 내용 읽어오기 -->
<select id="selectOneAccom" parameterType="int" resultType="accomBoard">
	select * from board NATURAL JOIN (select a.*, likename from accompany a, preference p 
	where a.likecode = p.likecode) where bnum = #{bnum}
</select>

<!-- 게시글 번호로 게시글 정책 읽어오기 -->
<select id="selectPolicyByBnum" parameterType="int" resultType="policy">
	 select * from policy where bnum = #{bnum}
</select>

<!-- 게시글 번호로 게시글 댓글 읽어오기 -->
<select id="selectCommentList" parameterType="int" resultType="comments">
	 select * from comments where bnum = #{bnum} order by cgrid, cnum
</select>

<!-- 게시글 번호로 게시글 신청자 받아오기 -->
<select id="selectRegisterListByBnum" parameterType="int" resultType="register">
	select mid, rnop, rid from register where bnum = #{bnum}
</select>

<!-- 게시글 번호로 동행게시글 현재 신청가능 인원 수 조회하기  -->
<select id="getPossibleNop" parameterType="int" resultType="int">
	 select anop - nvl((select sum(rnop)
                       from register
                       where bnum = #{bnum}
                       group by bnum), 0)
    from accompany
    where bnum = #{bnum}
</select>

<!-- 게시글 번호로 가이드게시글 현재 신청가능 인원 수 조회하기  -->
<select id="getPossibleGNop" parameterType="int" resultType="int">
	 select gnop - nvl((select sum(rnop)
                       from register
                       where bnum = #{bnum}
                       group by bnum), 0)
    from guide
    where bnum = #{bnum}
</select>

<!-- 게시글에 동행 및 가이드투어 신청하기 -->
<insert id="insertRegister" parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="rid">
	<selectKey resultType="int" keyProperty="rid" order="BEFORE">
			select register_seq.nextval from dual
	</selectKey>
	insert into register values ('R'||${rid}, #{bnum}, #{regId}, default, #{nop}, default)
</insert>

<!-- 게시글에 동행 및 가이드 투어 신청 취소하기 -->
<delete id="deleteRegister" parameterType="String">
	delete from register where rid=#{rid}
</delete>

<!-- 댓글 달기 -->
<insert id="insertComment" parameterType="comments" useGeneratedKeys="true" keyProperty="cnum">
	<selectKey resultType="int" keyProperty="cnum" order="BEFORE">
			select comments_seq.nextval from dual
	</selectKey>
	insert into comments values (#{cnum}, #{cnum}, #{bnum}, #{mid}, #{ccontent}, default, default)
</insert>

<!-- Re댓글 달기 -->
<insert id="insertRecomment" parameterType="comments" useGeneratedKeys="true" keyProperty="cnum">
	<selectKey resultType="int" keyProperty="cnum" order="BEFORE">
			select comments_seq.nextval from dual
	</selectKey>
	insert into comments values (#{cnum}, #{cgrid}, #{bnum}, #{mid}, #{ccontent}, default, default)
</insert>

<!-- 댓글,답글 삭제 -->
<update id="deleteComment" parameterType="int">
	update comments set cdel = 1 where cnum = #{cnum}
</update>

<!-- 게시글 삭제 -->
<update id="deleteBoard" parameterType="int">
	update board set cdel = 1 where bnum = #{bnum}
</update>

<!-- 동행글 게시글테이블 삽입 -->
<sql id="bcontent">
		<choose>
			<when test="bcontent!=''">
				#{bcontent}				
			</when>
			<otherwise>
				'내용없음'
			</otherwise>
		</choose>
	</sql>
<insert id="insertAccomBoard" parameterType="accomBoard" useGeneratedKeys="true" keyProperty="bnum">
	<selectKey resultType="int" keyProperty="bnum" order="BEFORE">
			select board_seq.nextval from dual
	</selectKey>
	insert into board values 
	(#{bnum}, #{bkind}, #{mid}, default, #{btitle}, <include refid="bcontent"/>, default, default)
</insert>

<!-- 동행글 동행테이블 삽입 -->
<insert id="insertAccom" parameterType="accomBoard">
	insert into accompany values 
	(#{bnum}, #{aarea}, #{astartdate}, #{afinishdate}, #{atime}, #{adepartplace}, #{adeparttime},
                                               #{anop}, #{likecode}, #{atransport}, #{acourse})
</insert>

<!-- 정책테이블에 새로운 게시글의 정책 삽입 -->
<insert id="insertPolicy" parameterType="policy">
	insert into policy values (#{bnum}, #{pcode}, #{pvalue})
</insert>

<!-- 동행글 게시글테이블 수정 -->
<update id="updateAccomBoard" parameterType="accomBoard">
	update board set btitle = #{btitle}, bcontent = #{bcontent} where bnum = #{bum}
</update>

<!-- 동행글 동행테이블 수정 -->
<update id="updateAccom" parameterType="accomBoard">
	update accompany set aarea = #{aarea}, astartdate = #{astartdate}, afinishdate = #{afinishdate}, atime = #{atime},
                                     adepartplace = #{adepartplace}, adeparttime = #{adeparttime}, anop = #{anop}, 
                                     likecode = #{likecode}, transport = #{transport}, acourse = #{acourse}
                                     where bnum = #{bnum}
</update>

<!-- 정책테이블에서 기존의 정책 삭제 -->
<delete id="deletePolicy" parameterType="int">
	delete from policy where bnum = #{bnum}
</delete>

<!-- 게시글 번호로 가이드게시글 내용 읽어오기 -->
<select id="selectOneGuide" parameterType="int" resultType="guideBoard">
	select * from board NATURAL JOIN guide where bnum = #{bnum}
</select>

<!-- 게시글 번호로 가이드게시글 사진경로 읽어오기 -->
<select id="selectAllPhotoByBnum" parameterType="int" resultType="String">
	select photopath from photo where bnum = #{bnum} order by porder
</select>

<!-- 게시글 번호로 가이드게시글 세부일정 읽어오기 -->
<select id="selectGScheByBnum" parameterType="int" resultType="guideschedule">
	select * from guideschedule where bnum = #{bnum} order by sdate, stime
</select>

<!-- 가이드게시글 게시글 테이블에 삽입  -->
<insert id="insertGuideBoard" parameterType="guideBoard" useGeneratedKeys="true" keyProperty="bnum">
	<selectKey resultType="int" keyProperty="bnum" order="BEFORE">
			select board_seq.nextval from dual
	</selectKey>
	insert into board values (#{bnum}, #{bkind}, #{mid}, default, #{btitle}, <include refid="bcontent"/>, default, default)
</insert> 

<!-- 가이드게시글 가이드 테이블에 삽입  -->
<insert id="insertGuide" parameterType="guideBoard">
	insert into guide values (#{bnum}, #{garea}, #{gstartdate}, #{gfinishdate}, #{gtime}, #{genddate}, #{gdepartplace}, 
                                               #{gdeparttime}, #{gnop}, #{gthema})
</insert>

<!-- 가이드게시글 세부일정 테이블에 삽입  -->
<insert id="insertGuideSche" parameterType="guideschedule" useGeneratedKeys="true" keyProperty="scode_output">
	<selectKey resultType="int" keyProperty="scode_output" order="BEFORE">
			select guideschedule_seq.nextval from dual
	</selectKey>
	insert into guideschedule values ('S'||${scode_output}, #{bnum}, #{sdate}, #{stime}, #{splace})
</insert>

<!-- 가이드게시글 사진 테이블에 삽입  -->
<insert id="insertPhoto" parameterType="java.util.HashMap">
	insert into photo values (#{bnum}, #{porder}, #{photopath})
</insert>

<!-- 가이드글 게시글테이블 수정 -->
<update id="updateGuideBoard" parameterType="guideBoard">
	update board set btitle = #{btitle}, bcontent = #{bcontent} where bnum = #{bum}
</update>

<!-- 가이드글 가이드테이블 수정 -->
<update id="updateGuide" parameterType="guideBoard">
	update guide set garea = #{garea}, gstartdate = #{gstartdate}, gfinishdate = #{gfinishdate}, gtime = #{gtime},
                                    genddate = #{genddate}, gdepartplace = #{gdepartplace}, gdeparttime = #{gdeparttime}, 
                                    gnop = #{gnop}, gthema = #{gthema} where bnum = #{bnum}
</update>

<!-- 가이드글 세부일정 삭제 -->
<delete id="deleteGuideSche" parameterType="String">
	delete from guideschedule where scode=#{scode}
</delete>

<!-- 게시글 번호로 커뮤니티게시글 읽어오기 -->
<select id="selectOneComm" parameterType="int" resultType="commuBoard">
	select * from board NATURAL JOIN community where bnum = #{bnum}
</select>

<!-- 커뮤니티게시글 게시글테이블 삽입 -->
<insert id="insertCommBoard" parameterType="commuBoard" useGeneratedKeys="true" keyProperty="bnum">
	<selectKey resultType="int" keyProperty="bnum" order="BEFORE">
			select board_seq.nextval from dual
	</selectKey>
	insert into board values (#{bnum}, #{bkind}, #{mid}, default, #{btitle}, #{bcontent}, default, default)
</insert>

<!-- 커뮤니티게시글 커뮤니티테이블 삽입 -->
<insert id="insertComm" parameterType="commuBoard">
	insert into community values (#{bnum}, #{commukind})
</insert>

<!-- 커뮤니티게시글 게시글테이블 수정 -->
<update id="updateCommBoard" parameterType="commuBoard">
	update board set btitle = #{btitle}, bcontent = #{bcontent} where bnum = #{bum}
</update> 

<!-- 커뮤니티게시글 커뮤니티테이블 수정 -->
<update id="updateComm" parameterType="commuBoard">
	update accompany set commukind = #{commukind} where bnum = #{bnum}
</update>

<!-- 게시판 조회수 증가 -->
<update id="updateReadCount" parameterType="int">
	update board set breadcount=breadcount+1 where bnum=#{bnum}
</update>




<!-- 메인검색 -->
<select id="selectByKeyword" parameterType="String" resultType="java.util.HashMap">
	select * from (select * from board where cdel = 0 order by bnum desc ) b
	where btitle like '%${value}%' or bcontent like '%${value}%'
</select>

	<select id="selectRidForDel" parameterType="java.util.HashMap" resultType="String">
		select rid from register where bnum = #{bnum} and mid = #{mid}
	</select>
	
	<sql id='atime'>
	<choose>
		<when test="sdate == fdate">
			and atime = #{atime}
		</when>
		<otherwise>
			
		</otherwise>
	</choose>
</sql>

<select id="selectCanRegiAccom" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	select * from (select astartdate,afinishdate,atime from accompany a, register r
	where a.bnum=r.bnum and r.mid=#{mid}) where (astartdate between #{sdate} and TO_DATE(#{fdate}, 'YY-MM-DD') + 1 
	or afinishdate between #{sdate} and TO_DATE(#{fdate}, 'YY-MM-DD') + 1)
</select>

<select id="selectCanRegiGuide">
</select>
</mapper>


