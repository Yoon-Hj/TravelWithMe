<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="dao.IMemberDao">
	
	<!-- 아이디로 비밀번호 조회 -->
	<select id = "selectPw" parameterType="String" resultType="String">
		select mpw from member where mid=#{mid}
	</select>
	
	<!-- 아이디로 여행취향 조회 -->
	<select id="selectLikecodeById" parameterType="String" resultType="String">
		select likecode from mempick where mid = #{mid}
	</select>
	
	<!-- 아이디로 신뢰지수, 등급 등 조회 -->
	<select id="selectMemPoint" parameterType="String" resultType="java.util.HashMap">
		select b.mid mid, b.mpoint mpoint, b.mguidepoint mguidepoint, grade, nvl(cnt, 0) cnt
		from guiderating a, member b left join (select mid, count(*) cnt from board group by mid) c
		on b.mid = c.mid where mguidepoint between minpoint and maxpoint and b.mid = #{mid}
	</select>
	
	<!-- 아이디로 알림내역 조회 -->
	<select id="selectAllNoticeById" parameterType="String" resultType="notice">
		select b1.bkind, b1.btitle, b2.* from board b1, (select * from notice natural join noticekind
        order by noticetime desc) b2 where b1.bnum = b2.bnum and b2.mid = #{mid}
	</select>
	
	<!-- 아이디로 알림내역 5개만 조회 -->
	<select id="selectNoticeById" parameterType="String" resultType="java.util.HashMap">
		select b1.bkind, b1.btitle, b2.* from board b1, (select a1.*, a2.nkreason from notice a1, noticekind a2
        where a1.nkcode = a2.nkcode order by a1.noticetime desc) b2 where b1.bnum = b2.bnum and b2.mid = #{mid} and <![CDATA[rownum <= 5]]>
	</select>
	
	<!-- 아이디로 회원정보 조회 -->
	<select id="selectMemInfo" parameterType="String" resultType="member">
		select * from member where mid = #{mid}
	</select>
	
	<!-- 아이디로 신청내역 5개만 조회 -->
	<select id="selectRegisterById" parameterType="String" resultType="java.util.HashMap">
		 select bkind, btitle, b.bnum, rid from board b, (select * from register where mid = #{mid} order by rdate desc) r
		 where b.bnum = r.bnum and <![CDATA[rownum <= 5]]>
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="selectId" parameterType="String" resultType="String">
		select mid from member where mname = #{mname} and mcontact = #{mcontact}
	</select>
	
	<!-- 비밀번호 찾기; 아이디 존재하는지 확인 -->
	<select id="selectOneMem" parameterType="java.util.HashMap" resultType="String">
		select mid from member where mid = #{mid} and  mname = #{mname} and mcontact = #{mcontact}
	</select>
	
	<!-- 비밀번호 재설정 -->
	<update id="updatePw" parameterType="java.util.HashMap">
		update member set mpw = #{mpw} where mid = #{mid} 
	</update>
	
	<!-- 아이디 중복확인 -->
	<select id="selectOneId" parameterType="String" resultType="String">
		select usedid from usedid where usedid = #{mid}
	</select>
	
	<!-- 회원 추가 -->
	<insert id="insertMember" parameterType="member">
		insert into member values (#{mid}, #{mpw}, #{mname}, #{mbirth}, #{mcontact}, #{mgender}, default, default)	
	</insert>
	
	<!-- 회원 아이디 추가 -->
	<insert id="insertUsedid" parameterType="String">
		insert into usedid values (#{usedid})
	</insert>
	
	<!-- 회원 여행취향 추가 -->
	<insert id="insertMempick" parameterType="mempick">
		insert into mempick values (#{mid}, #{likecode})
	</insert>
	
	<!-- 알림내역 추가 -->
	<insert id="insertNotice" parameterType="notice" useGeneratedKeys="true" keyProperty="nid">
		<selectKey resultType="int" keyProperty="nid" order="BEFORE">
			select notice_seq.nextval from dual		
		</selectKey>
			insert into notice values ('N'||${nid}, #{nkcode}, #{bnum}, #{mid}, default, default)
	</insert>
	
	<!-- 아이디로 연락처 조회 -->
	<select id="selectContact" parameterType="String" resultType="String">
		select mcontact from member where mid = #{mid}
	</select>
	
	<!-- 게시글번호로 신청자 정보 조회 -->
	<select id="selectRegiMemInfo" parameterType="int" resultType="java.util.HashMap">
		select m.mid, m.mname, m.mcontact, r.rid from member m, register r where m.mid = r.mid and r.bnum = #{bnum} 
	</select>
	
	<!-- 아이디로 신청내역 조회 -->
	<select id="selectAllRegisterById" parameterType="String" resultType="register">
		select bkind, btitle, b.bnum, rid from board b, (select * from register where mid = #{mid} order by rdate desc) r
		where b.bnum = r.bnum
	</select>
	
	<!-- 회원 정보 업데이트 -->
	<update id="updateMember" parameterType="member">
		update member set mname = #{mname}, mcontact = #{mcontact} where mid = #{mid}
	</update>
	
	<!-- 회원 삭제 -->
	<delete id="deleteMember" parameterType="String">
		delete from member where mid = #{mid}
	</delete>
	
	
	<!-- 회원 ID -->
	<select id="getMyNoticeCount" parameterType="String" resultType="int">
		select count(*) from notice where mid = #{mid} and noticestatus = 0
	</select>
	
	<!-- 가이드포인트 변경 -->
	<update id="updateGuidePoint" parameterType="java.util.HashMap">
		update member set mguidepoint = mguidepoint + ${gpoint}
		where mid = (select mid from member natural join board where bnum = #{bnum})
	</update>
	
	<!-- 가이드 평가 / 불참자 체크 여부 변경 -->
	<update id="updateEvalStatus" parameterType="String">
		update notice set evalstatus = 1 where nid = #{nid}
	</update>
	
	<!-- 알림 읽음으로 변경 -->
	<update id="updateNoticestatus" parameterType="String">
		update notice set noticestatus = 1 where nid = #{nid}
	</update>
	
	<!-- 신청인원 불러오기-->
	<select id="selectRegisterByBnum" parameterType="int" resultType="register">
		select rid, m.mid, mname from member m, register r
		where m.mid = r.mid and bnum = #{bnum}
	</select>
	
	<!-- 불참인원 체크 -->
	<update id="updateAttendStatusByRid" parameterType="String">
		update register set attendstatus = 1 where rid = #{rid}
	</update>
</mapper>