<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="service" />
	
	<bean class="service.UseAPI" id="useAPI">
	</bean>
	
	<bean class="service.SHA256" id="sHA256">
	</bean>
	
	<bean class="service.CsvTest" id="csvTest">
	</bean>

	<bean class="org.apache.commons.dbcp.BasicDataSource"
		id="dataSource">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url"
			value="jdbc:oracle:thin:@70.12.109.65:1521:xe"></property>
		<property name="username" value="TWM"></property>
		<property name="password" value="1234"></property>
		<property name="maxActive" value="8"></property>
		<property name="maxIdle" value="8"></property>
		<property name="minIdle" value="0"></property>
		<property name="initialSize" value="0"></property>
	</bean>

	<bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="model"></property>
		<property name="mapperLocations"
			value="classpath*:dao/mapper/**/*.xml"></property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="memberDao">
		<property name="sqlSessionFactory" ref="sqlSessionFactoryBean"></property>
		<property name="mapperInterface" value="dao.IMemberDao"></property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="boardDao">
		<property name="sqlSessionFactory" ref="sqlSessionFactoryBean"></property>
		<property name="mapperInterface" value="dao.IBoardDao"></property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="adminDao">
		<property name="sqlSessionFactory" ref="sqlSessionFactoryBean"></property>
		<property name="mapperInterface" value="dao.IAdminDao"></property>
	</bean>
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 하이브 dao 테스트중... -->
	<bean id="hiveDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.apache.hive.jdbc.HiveDriver"></property>
		<property name="url" value="jdbc:hive2://192.168.10.101:10000/default"></property>
		<property name="username" value="hive"></property>
		<property name="password" value="hive"></property>
	</bean>
	
	<bean id="hiveSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="hiveDataSource"></property>
		<property name="typeAliasesPackage" value="model"></property>
		<property name="mapperLocations" value="classpath*:dao/mapper/**/*.xml"></property>
	</bean>
	
	<bean id="hiveSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="hiveSqlSessionFactory"></constructor-arg>
	</bean>
	
	<bean id="hiveDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="dao.IHiveDao"></property>
		<property name="sqlSessionTemplate" ref="hiveSqlSession"></property>
	</bean>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<bean id="txManager" 
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:advice transaction-manager="txManager" id="mytx">
		<tx:attributes>
			<tx:method name="*" rollback-for="Exception" isolation="READ_COMMITTED"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:aspectj-autoproxy />
	<aop:config>
		<aop:advisor advice-ref="mytx" 
		pointcut="execution(public * service.*Service.*(..))"/>
	</aop:config>

</beans>
